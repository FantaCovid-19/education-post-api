tags:
  - name: Users
    description: Users Api

paths:
  /api/v1/users:
    get:
      summary: Find all users
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: page
        - in: query
          name: limit
          schema:
            type: integer
          description: limit
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      types: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: User Example
                        email:
                          type: string
                          format: email
                        role:
                          type: string
                          enum:
                            - USER
                            - ADMIN
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                  message:
                    type: string
                    example: findAll
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error message

    post:
      summary: Create new users
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: User Example
                      email:
                        type: string
                        format: email
                      role:
                        type: string
                        enum:
                          - USER
                          - ADMIN
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                  message:
                    type: string
                    example: Created
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      properties:
                        error:
                          type: string
                          example: Error message
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error message
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: String
                    example: Error message

  /api/v1/users/{id}:
    get:
      summary: Get specific user by id
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: integer
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: User Example
                      email:
                        type: string
                        format: email
                      role:
                        type: string
                        enum:
                          - USER
                          - ADMIN
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                  message:
                    type: string
                    example: findOne
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error message
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: String
                    example: Error message

    put:
      summary: Update specific user by id
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: integer
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: User Example
                      email:
                        type: string
                        format: email
                      role:
                        type: string
                        enum:
                          - USER
                          - ADMIN
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                  message:
                    type: string
                    example: Updated
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      properties:
                        error:
                          type: string
                          example: Error message
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error message
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: String
                    example: Error message

    delete:
      summary: Delete specific user by id
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: integer
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: User Example
                      email:
                        type: string
                        format: email
                      role:
                        type: string
                        enum:
                          - USER
                          - ADMIN
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                  message:
                    type: string
                    example: Deleted
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error message
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: String
                    example: Error message

components:
  schemas:
    Users:
      properties:
        name:
          type: string
          example: User Example
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        role:
          type: string
          enum:
            - USER
            - ADMIN
